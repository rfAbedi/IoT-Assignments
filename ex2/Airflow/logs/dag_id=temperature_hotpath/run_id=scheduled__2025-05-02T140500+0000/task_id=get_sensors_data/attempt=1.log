{"timestamp":"2025-05-02T14:05:51.921267","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-02T14:05:51.921871","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/iot-ex2-hotpath.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-02T14:05:52.110139Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.110840Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.111199Z","level":"info","event":"Current task name:get_sensors_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.111494Z","level":"info","event":"Dag name:temperature_hotpath","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.083795","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-02T14:05:52.110520","level":"info","event":"Connection Retrieved 'influxdb'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-02T14:05:52.110708","level":"info","event":"URI: http://influxdb:8181","logger":"airflow.task.hooks.airflow.providers.influxdb.hooks.influxdb.InfluxDBHook"}
{"timestamp":"2025-05-02T14:05:52.117167","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ApiException","exc_value":"(404)\nReason: Not Found\nHTTP response headers: HTTPHeaderDict({'transfer-encoding': 'chunked', 'date': 'Fri, 02 May 2025 14:05:51 GMT'})\nHTTP response body: b'not found'\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/decorator.py","lineno":251,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/iot-ex2-hotpath.py","lineno":28,"name":"get_sensors_data"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/influxdb/hooks/influxdb.py","lineno":117,"name":"query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/client/query_api.py","lineno":203,"name":"query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/service/query_service.py","lineno":285,"name":"post_query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/service/query_service.py","lineno":311,"name":"post_query_with_http_info"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/_sync/api_client.py","lineno":343,"name":"call_api"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/_sync/api_client.py","lineno":173,"name":"__call_api"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/_sync/api_client.py","lineno":388,"name":"request"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/_sync/rest.py","lineno":311,"name":"POST"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/_sync/rest.py","lineno":261,"name":"request"}]}]}
{"timestamp":"2025-05-02T14:05:52.119060Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.119397Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.119652Z","level":"info","event":"Task:<Task(_PythonDecoratedOperator): get_sensors_data>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.119915Z","level":"info","event":"Failure caused by (404)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.120131Z","level":"info","event":"Reason: Not Found","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.120991Z","level":"info","event":"HTTP response headers: HTTPHeaderDict({'transfer-encoding': 'chunked', 'date': 'Fri, 02 May 2025 14:05:51 GMT'})","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.121233Z","level":"info","event":"HTTP response body: b'not found'","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:05:52.121448Z","level":"info","event":"","chan":"stdout","logger":"task"}
