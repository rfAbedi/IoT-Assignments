{"timestamp":"2025-05-02T15:11:02.533994","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-02T15:11:02.534531","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/iot-ex2-hotpath.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-02T15:11:02.715524Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:11:02.716113Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:11:02.716371Z","level":"info","event":"Current task name:check_temperature_threshold","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:11:02.716586Z","level":"info","event":"Dag name:temperature_hotpath","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:11:02.716793Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:11:02.717003Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:11:02.717222Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): check_temperature_threshold>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:11:02.691074","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:10:04.932920+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691190","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:10:11.858179+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691258","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:10:18.885940+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691322","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:10:25.684909+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691381","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:10:33.684306+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691436","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:10:41.907754+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691490","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:10:49.237823+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691557","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:10:06.781754+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691625","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:10:14.033664+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691682","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:10:20.958912+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691736","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:10:28.261476+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691816","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:10:36.337787+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691873","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:10:44.482345+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.691927","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:10:51.774251+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:11:02.692574","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
