{"timestamp":"2025-05-02T14:57:24.824502","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-02T14:57:24.825070","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/iot-ex2-hotpath.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-02T14:57:25.061116Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:57:25.061857Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:57:25.062195Z","level":"info","event":"Current task name:check_temperature_threshold","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:57:25.063686Z","level":"info","event":"Dag name:temperature_hotpath","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:57:25.064840Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:57:25.065180Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:57:25.065447Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): check_temperature_threshold>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:57:25.043418","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:56:25.362749+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043538","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:56:33.804003+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043606","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:56:42.637775+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043668","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:56:50.890153+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043724","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:56:58.371897+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043779","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:57:06.325866+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043834","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:57:13.601186+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043888","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 14:57:20.492486+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043939","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 14:56:27.913234+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.043990","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 14:56:36.301419+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.044042","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 14:56:45.175226+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.044094","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 14:56:53.553683+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.044144","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 14:57:00.254154+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.044193","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 14:57:08.819489+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.044242","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 14:57:15.797359+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T14:57:25.045004","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
