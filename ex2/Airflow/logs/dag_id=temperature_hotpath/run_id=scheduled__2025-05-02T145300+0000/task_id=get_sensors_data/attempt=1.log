{"timestamp":"2025-05-02T14:53:00.991735","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-02T14:53:00.992423","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/iot-ex2-hotpath.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-02T14:53:01.163930Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.164677Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.165037Z","level":"info","event":"Current task name:get_sensors_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.165269Z","level":"info","event":"Dag name:temperature_hotpath","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.141771","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-02T14:53:01.164371","level":"info","event":"Connection Retrieved 'influxdb'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-02T14:53:01.164591","level":"info","event":"URI: http://influxdb:8086","logger":"airflow.task.hooks.airflow.providers.influxdb.hooks.influxdb.InfluxDBHook"}
{"timestamp":"2025-05-02T14:53:01.167072","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/client/warnings.py:31: MissingPivotFunction: The query doesn't contains the pivot() function.\n\nThe result will not be shaped to optimal processing by pandas.DataFrame. Use the pivot() function by:\n\n    \n        from(bucket: \"iot-ex2\")\n        |> range(start: -1m)\n        |> filter(fn: (r) => r._measurement == \"sensors\")\n        |> filter(fn: (r) => r._field == \"t\")\n         |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n\nYou can disable this warning by:\n    import warnings\n    from influxdb_client.client.warnings import MissingPivotFunction\n\n    warnings.simplefilter(\"ignore\", MissingPivotFunction)\n\nFor more info see:\n    - https://docs.influxdata.com/resources/videos/pivots-in-flux/\n    - https://docs.influxdata.com/flux/latest/stdlib/universe/pivot/\n    - https://docs.influxdata.com/flux/latest/stdlib/influxdata/influxdb/schema/fieldsascols/\n\n  warnings.warn(message, MissingPivotFunction)\n","logger":"py.warnings"}
{"timestamp":"2025-05-02T14:53:01.189754","level":"info","event":"Done. Returned value was: [{'result': '_result', 'table': 0, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:07.264909+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:16.063874+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:25.384170+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:34.181845+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:42.844090+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:51.758269+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 1, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:01.430287+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:10.120529+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:19.065225+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:28.029014+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:36.764431+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:45.513741+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': Timestamp('2025-05-02 14:52:01.170070+0000', tz='UTC'), '_stop': Timestamp('2025-05-02 14:53:01.170070+0000', tz='UTC'), '_time': '2025-05-02 14:52:54.419530+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}]","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-05-02T14:53:01.190127","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0196917c-8a87-7df7-937b-50f272e5bd15'), task_id='get_sensors_data', dag_id='temperature_hotpath', run_id='scheduled__2025-05-02T14:53:00+00:00', try_number=1, map_index=-1, hostname='7093941e5032', context_carrier={}, task=<Task(_PythonDecoratedOperator): get_sensors_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 5, 2, 14, 53, 0, 526304, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.190399","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"cannot serialize object of type <class 'pandas._libs.tslibs.timestamps.Timestamp'>","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":827,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1141,"name":"_push_xcom_if_needed"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":515,"name":"_xcom_push"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":64,"name":"set"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":283,"name":"serialize_value"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":129,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":135,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":185,"name":"serialize"}]}]}
{"timestamp":"2025-05-02T14:53:01.191358Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.191595Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.191855Z","level":"info","event":"Task:<Task(_PythonDecoratedOperator): get_sensors_data>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:53:01.192121Z","level":"info","event":"Failure caused by cannot serialize object of type <class 'pandas._libs.tslibs.timestamps.Timestamp'>","chan":"stdout","logger":"task"}
