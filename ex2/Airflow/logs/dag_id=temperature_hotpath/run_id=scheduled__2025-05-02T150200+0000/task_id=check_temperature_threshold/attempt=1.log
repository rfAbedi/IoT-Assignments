{"timestamp":"2025-05-02T15:02:02.743817","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-02T15:02:02.744439","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/iot-ex2-hotpath.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-02T15:02:02.946771Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:02:02.947475Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:02:02.947859Z","level":"info","event":"Current task name:check_temperature_threshold","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:02:02.948129Z","level":"info","event":"Dag name:temperature_hotpath","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:02:02.948367Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:02:02.948590Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:02:02.948816Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): check_temperature_threshold>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:02:02.911894","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:01:02.850165+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912014","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:01:11.204220+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912083","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:01:19.761918+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912146","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:01:28.685705+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912204","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:01:37.432327+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912262","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:01:46.316425+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912319","level":"warning","event":"sensor 1 = 5.199999809265137°C at 2025-05-02 15:01:55.641764+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912375","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:01:05.659069+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912430","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:01:13.779104+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912484","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:01:22.407673+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912537","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:01:31.405918+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912589","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:01:40.226515+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.912642","level":"warning","event":"sensor 2 = 40.0°C at 2025-05-02 15:01:49.083230+00:00 (out of range)","logger":"root"}
{"timestamp":"2025-05-02T15:02:02.913515","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
