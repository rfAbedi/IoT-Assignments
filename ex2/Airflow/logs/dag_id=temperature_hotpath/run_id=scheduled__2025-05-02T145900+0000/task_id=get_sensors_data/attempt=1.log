{"timestamp":"2025-05-02T14:59:01.688277","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-02T14:59:01.689044","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/iot-ex2-hotpath.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-02T14:59:01.885960Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:59:01.886583Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:59:01.886855Z","level":"info","event":"Current task name:get_sensors_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:59:01.887113Z","level":"info","event":"Dag name:temperature_hotpath","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:59:01.861255","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-02T14:59:01.886344","level":"info","event":"Connection Retrieved 'influxdb'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-02T14:59:01.886544","level":"info","event":"URI: http://influxdb:8086","logger":"airflow.task.hooks.airflow.providers.influxdb.hooks.influxdb.InfluxDBHook"}
{"timestamp":"2025-05-02T14:59:01.889531","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/client/warnings.py:31: MissingPivotFunction: The query doesn't contains the pivot() function.\n\nThe result will not be shaped to optimal processing by pandas.DataFrame. Use the pivot() function by:\n\n    \n        from(bucket: \"iot-ex2\")\n        |> range(start: -1m)\n        |> filter(fn: (r) => r._measurement == \"sensors\")\n        |> filter(fn: (r) => r._field == \"t\")\n         |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n\nYou can disable this warning by:\n    import warnings\n    from influxdb_client.client.warnings import MissingPivotFunction\n\n    warnings.simplefilter(\"ignore\", MissingPivotFunction)\n\nFor more info see:\n    - https://docs.influxdata.com/resources/videos/pivots-in-flux/\n    - https://docs.influxdata.com/flux/latest/stdlib/universe/pivot/\n    - https://docs.influxdata.com/flux/latest/stdlib/influxdata/influxdb/schema/fieldsascols/\n\n  warnings.warn(message, MissingPivotFunction)\n","logger":"py.warnings"}
{"timestamp":"2025-05-02T14:59:01.916913","level":"info","event":"Done. Returned value was: [{'result': '_result', 'table': 0, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:03.135978+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:10.886754+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:19.553068+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:28.419952+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:36.944392+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:45.961808+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:55.145239+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:05.045437+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:13.673695+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:22.232067+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:31.149923+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:39.708242+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:48.677334+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 14:58:01.892781+00:00', '_stop': '2025-05-02 14:59:01.892781+00:00', '_time': '2025-05-02 14:58:57.893461+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}]","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-05-02T14:59:01.917290","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01969182-0ab7-7631-b393-bd78228b8afe'), task_id='get_sensors_data', dag_id='temperature_hotpath', run_id='scheduled__2025-05-02T14:59:00+00:00', try_number=1, map_index=-1, hostname='7093941e5032', context_carrier={}, task=<Task(_PythonDecoratedOperator): get_sensors_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 5, 2, 14, 59, 1, 67333, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-05-02T14:59:01.918417Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:59:01.918703Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T14:59:01.951453Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): get_sensors_data>","chan":"stdout","logger":"task"}
