{"timestamp":"2025-05-02T15:04:01.285644","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-02T15:04:01.286260","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/iot-ex2-hotpath.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-02T15:04:01.464484Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:04:01.465186Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:04:01.465498Z","level":"info","event":"Current task name:get_sensors_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:04:01.465732Z","level":"info","event":"Dag name:temperature_hotpath","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:04:01.441978","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-02T15:04:01.464870","level":"info","event":"Connection Retrieved 'influxdb'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-02T15:04:01.465062","level":"info","event":"URI: http://influxdb:8086","logger":"airflow.task.hooks.airflow.providers.influxdb.hooks.influxdb.InfluxDBHook"}
{"timestamp":"2025-05-02T15:04:01.467479","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/influxdb_client/client/warnings.py:31: MissingPivotFunction: The query doesn't contains the pivot() function.\n\nThe result will not be shaped to optimal processing by pandas.DataFrame. Use the pivot() function by:\n\n    \n        from(bucket: \"iot-ex2\")\n        |> range(start: -1m)\n        |> filter(fn: (r) => r._measurement == \"sensors\")\n        |> filter(fn: (r) => r._field == \"t\")\n         |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n\nYou can disable this warning by:\n    import warnings\n    from influxdb_client.client.warnings import MissingPivotFunction\n\n    warnings.simplefilter(\"ignore\", MissingPivotFunction)\n\nFor more info see:\n    - https://docs.influxdata.com/resources/videos/pivots-in-flux/\n    - https://docs.influxdata.com/flux/latest/stdlib/universe/pivot/\n    - https://docs.influxdata.com/flux/latest/stdlib/influxdata/influxdb/schema/fieldsascols/\n\n  warnings.warn(message, MissingPivotFunction)\n","logger":"py.warnings"}
{"timestamp":"2025-05-02T15:04:01.495820","level":"info","event":"Done. Returned value was: [{'result': '_result', 'table': 0, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:05.899187+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:14.718999+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:24.952729+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:33.970714+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:43.403018+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:50.019142+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 0, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:56.414392+00:00', '_value': 5.199999809265137, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '1', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/1'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:08.510943+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:17.887293+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:28.116591+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:36.862105+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:45.642474+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}, {'result': '_result', 'table': 1, '_start': '2025-05-02 15:03:01.470306+00:00', '_stop': '2025-05-02 15:04:01.470306+00:00', '_time': '2025-05-02 15:03:51.962830+00:00', '_value': 40.0, '_field': 't', '_measurement': 'sensors', 'host': '72d54430659a', 'location': 'greenhouse', 'sensorID': '2', 'sensorType': 'dht22', 'topic': 'sensors/greenhouse/dht22/2'}]","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-05-02T15:04:01.496171","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01969186-9d58-7291-bfd3-af8644406f7d'), task_id='get_sensors_data', dag_id='temperature_hotpath', run_id='scheduled__2025-05-02T15:04:00+00:00', try_number=1, map_index=-1, hostname='7093941e5032', context_carrier={}, task=<Task(_PythonDecoratedOperator): get_sensors_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 5, 2, 15, 4, 0, 709765, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-05-02T15:04:01.533115Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:04:01.533535Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-02T15:04:01.533870Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): get_sensors_data>","chan":"stdout","logger":"task"}
